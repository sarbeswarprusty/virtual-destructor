#include<iostream>  
using namespace std;  
class Base  
{  
    public:  
    Base()    
{  
    cout << "Constructor Base class"<<endl;  
}  
 virtual ~Base() 
{  
    cout << "Destructor Base class"<<endl;  
}  
};  
  
class Derived: public Base   
{  
    public:  
    Derived()  
{  
    cout << "Constructor Derived class"<<endl;  
}  
 ~Derived()    
{  
    cout << "Destructor Derived class"<<endl;  
}         
};  
int main()  
{  
    Base *bptr = new Derived; 
    delete bptr;
}  